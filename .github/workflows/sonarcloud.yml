name: SonarCloud

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: windows-latest

    steps:
      # Configuración de Java (necesaria para el escáner de SonarCloud)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      # Checkout del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Cache del escáner de SonarCloud
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .sonar/cache
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: |
            ${{ runner.os }}-sonar-scanner

      # Instalación del escáner de SonarCloud
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          dotnet tool install --global dotnet-sonarscanner
          echo "::add-path::$(dotnet tool path)"

      # Configuración del análisis con SonarCloud
      - name: Build and analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          dotnet-sonarscanner begin /k:"SergioRivera8888S-Proyecto-D" /o:"sergiorivera8888s" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          dotnet build
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
